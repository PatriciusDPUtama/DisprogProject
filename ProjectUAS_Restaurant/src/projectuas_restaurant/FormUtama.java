/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectuas_restaurant;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class FormUtama extends javax.swing.JFrame implements Runnable {

    private Socket clientSocket;
    private Thread t;
    private String serverChat;
    private DataOutputStream toServer;
    private BufferedReader fromServer;
    private String clientChat, name;

    /**
     * Creates new form FormUtama
     */
    public FormUtama() {
        initComponents();
    }

    public FormUtama(String username, Socket s) {
        initComponents();
        setLocationRelativeTo(null);
        try {
            this.clientSocket = s;
            this.name = username;
            fromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            toServer = new DataOutputStream(clientSocket.getOutputStream());

            toServer.writeBytes("RestoName " + username + "\n");
            System.out.println("sent to server " + username);
            String namaResto = fromServer.readLine();
            lblWelcome.setText("WELCOME, " + namaResto);
            lblRestoName.setText(namaResto);

            if (t == null) {
                t = new Thread(this, "Simple Chat");
                t.start();
            }
        } catch (Exception e) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public void getChat() {
        try {
            serverChat = fromServer.readLine();
            
            String[] columnNames = {"Id", "Customer", "Restaurant", "Number of People", "Data and Time"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);
            Object[] data = new Object[5];
            tableData.setModel(model);

            String messageSplit[] = serverChat.split("&");
            int numberOfItems = messageSplit.length;
            String numberOfUser = messageSplit[0];
            String dataNumber[];

            txtNotif.append("Amount of Bookings : " + numberOfUser + "\n");
            for (int i = 1; i < numberOfItems; i++) {
                String dataText = "";
                dataNumber = messageSplit[i].split(";");
                data[0] = i;
                for (int x = 0; x < dataNumber.length; x++) {
                    dataText += dataNumber[x] + " ";
                    data[x + 1] = dataNumber[x];
                }
                System.out.println(dataText);
                model.addRow(data);
            }
        } catch (Exception e) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public void sendMessage(String tmp) throws IOException {
        try {
            toServer.writeBytes(tmp + "\n");
        } catch (IOException e) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public void checkNotif()
    {
        try{
            serverChat = fromServer.readLine();
            if(serverChat.contains("available"))
            {
                String[] splits = serverChat.split(";-");
                String customer = splits[1];
                String date = splits[2];
                String people = splits[3];
                txtNotif.append("New Bookings Added : \n");
                txtNotif.append(customer + " has booked at " + date + " for " + people + " people\n");
                sendMessage("RestoBooking " + name + "\n");
        getChat();
            }
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
    }
    @Override
    public void run() {
        try {
            
            sendMessage("RestoBooking " + name + "\n");
            getChat();
            while(true)
            {
                checkNotif();
            }
            
        } catch (Exception e) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtNotif = new javax.swing.JTextArea();
        lblRestoName = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        lblWelcome = new javax.swing.JLabel();
        refreshTable = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNotif.setColumns(20);
        txtNotif.setRows(5);
        jScrollPane1.setViewportView(txtNotif);

        lblRestoName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRestoName.setForeground(new java.awt.Color(0, 153, 153));
        lblRestoName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRestoName.setText("RestoName");

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableData.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tableData);

        lblWelcome.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("WELCOME, ");

        refreshTable.setText("Refresh Table");
        refreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRestoName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshTable)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome)
                    .addComponent(lblRestoName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(refreshTable))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTableActionPerformed
        // TODO add your handling code here:
        try{
          sendMessage("RestoBooking " + name + "\n");
        getChat();  
        }
        catch(Exception ex)
        {
            
        }
        
    }//GEN-LAST:event_refreshTableActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblRestoName;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JButton refreshTable;
    private javax.swing.JTable tableData;
    private javax.swing.JTextArea txtNotif;
    // End of variables declaration//GEN-END:variables
}
